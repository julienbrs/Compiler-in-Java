`> [3, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [3, 0] Main
      +> ListDeclVar [List with 2 elements]
      |  []> [4, 8] DeclVar
      |  ||  +> [4, 4] Identifier (int)
      |  ||  +> [4, 8] Identifier (x)
      |  ||  `> [4, 10] Initialization
      |  ||     `> [4, 12] Int (8)
      |  []> [5, 8] DeclVar
      |      +> [5, 4] Identifier (int)
      |      +> [5, 8] Identifier (y)
      |      `> [5, 10] Initialization
      |         `> [5, 12] Int (10)
      `> ListInst [List with 1 elements]
         []> [6, 4] IfThenElse
             +> [6, 10] Greater
             |  +> [6, 8] Identifier (x)
             |  `> [6, 12] Int (5)
             +> ListInst [List with 1 elements]
             |  []> [7, 8] IfThenElse
             |      +> [7, 14] Greater
             |      |  +> [7, 12] Identifier (y)
             |      |  `> [7, 16] Int (8)
             |      +> ListInst [List with 2 elements]
             |      |  []> [8, 14] Assign
             |      |  ||  +> [8, 12] Identifier (x)
             |      |  ||  `> [8, 16] Plus
             |      |  ||     +> [8, 17] Int (3)
             |      |  ||     `> [8, 21] Int (1)
             |      |  []> [9, 12] Println
             |      |      `> ListExpr [List with 1 elements]
             |      |         []> [9, 20] StringLiteral (x est plus grand que 5 et y est plus grand que 8)
             |      `> ListInst [List with 1 elements]
             |         []> [11, 12] Println
             |             `> ListExpr [List with 1 elements]
             |                []> [11, 20] StringLiteral (x est plus grand que 5 mais y est inférieur ou égal à 8)
             `> ListInst [List with 1 elements]
                []> [14, 8] Println
                    `> ListExpr [List with 1 elements]
                       []> [14, 16] StringLiteral (x est inférieur ou égal à 5)
