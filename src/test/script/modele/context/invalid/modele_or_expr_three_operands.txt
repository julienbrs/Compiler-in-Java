`> [3, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [3, 0] Main
      +> ListDeclVar [List with 4 elements]
      |  []> [4, 10] DeclVar
      |  ||  +> [4, 2] Identifier (boolean)
      |  ||  |  definition: type (builtin), type=boolean
      |  ||  +> [4, 10] Identifier (x)
      |  ||  |  definition: variable defined at [4, 10], type=boolean
      |  ||  `> NoInitialization
      |  []> [4, 13] DeclVar
      |  ||  +> [4, 2] Identifier (boolean)
      |  ||  |  definition: type (builtin), type=boolean
      |  ||  +> [4, 13] Identifier (y)
      |  ||  |  definition: variable defined at [4, 13], type=boolean
      |  ||  `> NoInitialization
      |  []> [4, 16] DeclVar
      |  ||  +> [4, 2] Identifier (boolean)
      |  ||  |  definition: type (builtin), type=boolean
      |  ||  +> [4, 16] Identifier (z)
      |  ||  |  definition: variable defined at [4, 16], type=boolean
      |  ||  `> NoInitialization
      |  []> [5, 6] DeclVar
      |      +> [5, 2] Identifier (int)
      |      |  definition: type (builtin), type=int
      |      +> [5, 6] Identifier (b)
      |      |  definition: variable defined at [5, 6], type=int
      |      `> NoInitialization
      `> ListInst [List with 1 elements]
         []> [6, 2] IfThenElse
             +> [6, 13] Or
             |  type: boolean
             |  +> [6, 8] Or
             |  |  type: boolean
             |  |  +> [6, 6] Identifier (x)
             |  |  |  definition: variable defined at [4, 10], type=boolean
             |  |  `> [6, 11] Identifier (y)
             |  |     definition: variable defined at [4, 13], type=boolean
             |  `> [6, 16] Identifier (z)
             |     definition: variable defined at [4, 16], type=boolean
             +> ListInst [List with 1 elements]
             |  []> [7, 6] Assign
             |      type: int
             |      +> [7, 4] Identifier (b)
             |      |  definition: variable defined at [5, 6], type=int
             |      `> [7, 8] Int (5)
             |         type: int
             `> ListInst [List with 0 elements]
