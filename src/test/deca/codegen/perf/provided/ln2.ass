; start main program
	TSTO #12
	BOV pile_pleine
	ADDSP #8

; Generation table des methodes
; Table methodes Object
	LOAD #null, R2
	STORE R2, 1(GB)
	LOAD code.Object.equals, R2
	STORE R2, 2(GB)

; Main program
; Variables declarations:
	LOAD #0x0.0p0, R2
	STORE R2, 3(GB)
	LOAD #0x1.0p0, R2
	STORE R2, 4(GB)
	LOAD #0x1.0p0, R2
	OPP R2, R2
	STORE R2, 5(GB)
	LOAD #0x1.6fc2ecp-1, R2
	STORE R2, 6(GB)
	LOAD #0x0.0p0, R2
	STORE R2, 7(GB)
	LOAD #0x0.0p0, R2
	STORE R2, 8(GB)
; Beginning of main instructions:
	BRA while_cond.1
while_start.1:
	LOAD 3(GB), R2
	LOAD 4(GB), R3
	ADD R3, R2
	BOV debordement_arithmetique
	LOAD #0x1.0p1, R3
	DIV R3, R2
	BOV debordement_arithmetique
	STORE R2, 7(GB)
	LOAD 7(GB), R2
	LOAD 7(GB), R3
	LOAD 7(GB), R4
	LOAD 7(GB), R5
	LOAD 7(GB), R6
	PUSH R6
	LOAD 7(GB), R6
	PUSH R6
	LOAD 7(GB), R6
	PUSH R6
	LOAD #0x1.0p0, R6
	PUSH R6
	LOAD #0x1.3bp12, R6
	LOAD R6, R0
	POP R6
	DIV R0, R6
	BOV debordement_arithmetique
	LOAD R6, R0
	POP R6
	MUL R0, R6
	BOV debordement_arithmetique
	PUSH R6
	LOAD #0x1.0p0, R6
	PUSH R6
	LOAD #0x1.68p9, R6
	LOAD R6, R0
	POP R6
	DIV R0, R6
	BOV debordement_arithmetique
	LOAD R6, R0
	POP R6
	ADD R0, R6
	BOV debordement_arithmetique
	LOAD R6, R0
	POP R6
	MUL R0, R6
	BOV debordement_arithmetique
	PUSH R6
	LOAD #0x1.0p0, R6
	PUSH R6
	LOAD #0x1.ep6, R6
	LOAD R6, R0
	POP R6
	DIV R0, R6
	BOV debordement_arithmetique
	LOAD R6, R0
	POP R6
	ADD R0, R6
	BOV debordement_arithmetique
	LOAD R6, R0
	POP R6
	MUL R0, R6
	BOV debordement_arithmetique
	PUSH R6
	LOAD #0x1.0p0, R6
	PUSH R6
	LOAD #0x1.8p4, R6
	LOAD R6, R0
	POP R6
	DIV R0, R6
	BOV debordement_arithmetique
	LOAD R6, R0
	POP R6
	ADD R0, R6
	BOV debordement_arithmetique
	MUL R6, R5
	BOV debordement_arithmetique
	LOAD #0x1.0p0, R6
	PUSH R6
	LOAD #0x1.8p2, R6
	LOAD R6, R0
	POP R6
	DIV R0, R6
	BOV debordement_arithmetique
	ADD R6, R5
	BOV debordement_arithmetique
	MUL R5, R4
	BOV debordement_arithmetique
	LOAD #0x1.0p0, R5
	LOAD #0x1.0p1, R6
	DIV R6, R5
	BOV debordement_arithmetique
	ADD R5, R4
	BOV debordement_arithmetique
	MUL R4, R3
	BOV debordement_arithmetique
	LOAD #0x1.0p0, R4
	ADD R4, R3
	BOV debordement_arithmetique
	MUL R3, R2
	BOV debordement_arithmetique
	LOAD #1, R3
	FLOAT R3, R3
	SUB R3, R2
	BOV debordement_arithmetique
	STORE R2, 8(GB)
	LOAD 8(GB), R2
	LOAD #0x0.0p0, R3
	CMP R3, R2
	BLE else.2
	LOAD 7(GB), R2
	STORE R2, 4(GB)
	LOAD 8(GB), R2
	STORE R2, 6(GB)
	BRA end.2
else.2:
	LOAD 7(GB), R2
	STORE R2, 3(GB)
	LOAD 8(GB), R2
	STORE R2, 5(GB)
end.2:
while_cond.1:
	LOAD 4(GB), R2
	LOAD 3(GB), R3
	LOAD #0x1.0p-23, R4
	ADD R4, R3
	BOV debordement_arithmetique
	CMP R3, R2
	BGE while_start.1
	LOAD 3(GB), R2
	LOAD R2, R1
	WFLOAT
	WSTR " = "
	LOAD 3(GB), R2
	LOAD R2, R1
	WFLOATX
	WNL
	HALT

; Methodes de classe
code.Object.equals:
	TSTO #2
	BOV pile_pleine
	PUSH R2
	PUSH R3
	LOAD -2(LB), R2
	LOAD -3(LB), R3
	CMP R2, R3
	SEQ R0
	POP R3
	POP R2
	RTS
; end main program
; Gestion des erreurs d'executions
pile_pleine:
	WSTR "Débordement de pile"
	WNL
	ERROR
tas_plein:
	WSTR "Débordement du tas"
	WNL
	ERROR
division_par_0:
	WSTR "Division par 0"
	WNL
	ERROR
debordement_arithmetique:
	WSTR "Débordement arithmetique"
	WNL
	ERROR
dereferencement_null:
	WSTR "Déréférencement de ""null"""
	WNL
	ERROR
cast_impossible:
	WSTR "Cast impossible"
	WNL
	ERROR
index_hors_range:
	WSTR "Index hors range"
	WNL
	ERROR
erreur_de_lecture:
	WSTR "Erreur de lecture"
	WNL
	ERROR
